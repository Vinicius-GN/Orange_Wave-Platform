
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://wlrrevhsbardebaooktj.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndscnJldmhzYmFyZGViYW9va3RqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc0OTA3NTMsImV4cCI6MjA2MzA2Njc1M30.3K2yDZZDID6jcmtL0pILRK7tQbD5q5PLHhpBeeoMNys";

// Since types.ts may not reflect latest schema updates, use a more generic type
// that allows us to access tables that might not be in the types yet
type GenericSchema = Database['public'] & {
  Tables: Database['public']['Tables'] & {
    balances: {
      Row: {
        user_id: string;
        cash: number;
      };
      Insert: {
        user_id: string;
        cash?: number;
      };
      Update: {
        cash?: number;
      };
    };
    cash_moves: {
      Row: {
        id: string;
        user_id: string;
        type: 'deposit' | 'withdrawal';
        amount: number;
        created_at: string;
      };
      Insert: {
        user_id: string;
        type: 'deposit' | 'withdrawal';
        amount: number;
      };
      Update: {
        amount?: number;
      };
    };
    wallet_positions: {
      Row: {
        id: string;
        user_id: string;
        ticker: string;
        asset_type: 'stock' | 'crypto';
        quantity: number;
        avg_cost: number;
      };
      Insert: {
        user_id: string;
        ticker: string;
        asset_type: 'stock' | 'crypto';
        quantity: number;
        avg_cost: number;
      };
      Update: {
        quantity?: number;
        avg_cost?: number;
      };
    };
  }
}

type ExtendedDatabase = {
  public: GenericSchema;
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<ExtendedDatabase>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: typeof window !== 'undefined' ? localStorage : undefined,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    flowType: 'implicit'
  }
});
